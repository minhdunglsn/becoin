version: '3.2'

services:
  web:
    container_name: website
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    command: ["pipenv", "run", "gunicorn", "huutuananh.wsgi", "--log-file -",
      "-b 0.0.0.0:8000"]
    environment:
      - PIPENV_DOTENV_LOCATION=/code/prod.env
    volumes:
      - ../:/code
    env_file:
      ../prod.env
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      # - db
      - redis
      - memcached

  worker:
    container_name: worker
    build:
      context: ..
      dockerfile: ./docker/Dockerfile_worker
    command: ["pipenv", "run", "celery", "-A", "huutuananh", "worker", "-B"]
    environment:
      - PIPENV_DOTENV_LOCATION=/code/prod.env
    volumes:
      - ../:/code
    env_file:
      ../prod.env
    # depends_on:
      # - db
      # - web
      # - redis
      # - memcached
    profiles:
      - "donotstart"

  db:
    container_name: websitedb
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=website
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=websitedb
    profiles:
      - "donotstart"

  redis:
    container_name: redis
    image: 'bitnami/redis:7.0'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=password123
      - REDIS_PORT_NUMBER=7000
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    volumes:
      - /etc/localtime:/etc/localtime:ro
        # - ./redis-persistence:/bitnami/redis/data
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb

  memcached:
    container_name: memcached
    image: 'bitnami/memcached:1.6.17'
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_MAX_CONNECTIONS=2000
      - MEMCACHED_THREADS=4
      - MEMCACHED_MAX_ITEM_SIZE=8388608
      - MEMCACHED_USERNAME=website
      - MEMCACHED_PASSWORD=password123

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx:/etc/ssl
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

volumes:
  postgres_data:
